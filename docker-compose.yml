version: '3.8'

services:
  # PostgreSQL Database with PostGIS
  postgres:
    image: postgis/postgis:15-3.3-alpine
    container_name: horeca-postgres
    environment:
      POSTGRES_DB: horeca_prospection
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for BullMQ
  redis:
    image: redis:7-alpine
    container_name: horeca-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: horeca-backend
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/horeca_prospection
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: horeca_prospection
      DB_USER: postgres
      DB_PASSWORD: postgres
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: development-secret-change-in-production
      JWT_EXPIRES_IN: 15m
      JWT_REFRESH_SECRET: development-refresh-secret-change-in-production
      JWT_REFRESH_EXPIRES_IN: 7d
      CORS_ORIGIN: http://localhost:3030
      LOG_LEVEL: debug
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run dev

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: horeca-frontend
    environment:
      REACT_APP_API_URL: http://localhost:3001/api/v1
      REACT_APP_MAPBOX_API_KEY: ${MAPBOX_API_KEY}
    ports:
      - "3030:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    command: npm start

  # AI Worker
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: horeca-worker
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/horeca_prospection
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: horeca_prospection
      DB_USER: postgres
      DB_PASSWORD: postgres
      REDIS_HOST: redis
      REDIS_PORT: 6379
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: gpt-4
      LOG_LEVEL: debug
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: node -r ts-node/register src/workers/ai-enrichment.worker.ts

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: horeca-network

